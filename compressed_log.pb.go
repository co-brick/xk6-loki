// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: compressed_log.proto

package loki

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompressedLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*CompressedLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *CompressedLogs) Reset() {
	*x = CompressedLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compressed_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompressedLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressedLogs) ProtoMessage() {}

func (x *CompressedLogs) ProtoReflect() protoreflect.Message {
	mi := &file_compressed_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressedLogs.ProtoReflect.Descriptor instead.
func (*CompressedLogs) Descriptor() ([]byte, []int) {
	return file_compressed_log_proto_rawDescGZIP(), []int{0}
}

func (x *CompressedLogs) GetLogs() []*CompressedLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type CompressedLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	TemplateID int64                  `protobuf:"varint,2,opt,name=templateID,proto3" json:"templateID,omitempty"`
	LogVars    []string               `protobuf:"bytes,3,rep,name=logVars,proto3" json:"logVars,omitempty"`
	Labels     string                 `protobuf:"bytes,4,opt,name=labels,proto3" json:"labels,omitempty"`
}

func (x *CompressedLog) Reset() {
	*x = CompressedLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compressed_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompressedLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressedLog) ProtoMessage() {}

func (x *CompressedLog) ProtoReflect() protoreflect.Message {
	mi := &file_compressed_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressedLog.ProtoReflect.Descriptor instead.
func (*CompressedLog) Descriptor() ([]byte, []int) {
	return file_compressed_log_proto_rawDescGZIP(), []int{1}
}

func (x *CompressedLog) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *CompressedLog) GetTemplateID() int64 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

func (x *CompressedLog) GetLogVars() []string {
	if x != nil {
		return x.LogVars
	}
	return nil
}

func (x *CompressedLog) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

var File_compressed_log_proto protoreflect.FileDescriptor

var file_compressed_log_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x8d, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x12,
	0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x67, 0x56, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x56, 0x61, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x42, 0x59, 0x0a,
	0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x2e, 0x61, 0x69, 0x6f,
	0x70, 0x73, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x42, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x4c, 0x6f, 0x67,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2f, 0x78, 0x6b, 0x36, 0x2d, 0x6c,
	0x6f, 0x6b, 0x69, 0x2f, 0x6c, 0x6f, 0x6b, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_compressed_log_proto_rawDescOnce sync.Once
	file_compressed_log_proto_rawDescData = file_compressed_log_proto_rawDesc
)

func file_compressed_log_proto_rawDescGZIP() []byte {
	file_compressed_log_proto_rawDescOnce.Do(func() {
		file_compressed_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_compressed_log_proto_rawDescData)
	})
	return file_compressed_log_proto_rawDescData
}

var file_compressed_log_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_compressed_log_proto_goTypes = []interface{}{
	(*CompressedLogs)(nil),        // 0: CompressedLogs
	(*CompressedLog)(nil),         // 1: CompressedLog
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_compressed_log_proto_depIdxs = []int32{
	1, // 0: CompressedLogs.logs:type_name -> CompressedLog
	2, // 1: CompressedLog.ts:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_compressed_log_proto_init() }
func file_compressed_log_proto_init() {
	if File_compressed_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_compressed_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompressedLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compressed_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompressedLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_compressed_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_compressed_log_proto_goTypes,
		DependencyIndexes: file_compressed_log_proto_depIdxs,
		MessageInfos:      file_compressed_log_proto_msgTypes,
	}.Build()
	File_compressed_log_proto = out.File
	file_compressed_log_proto_rawDesc = nil
	file_compressed_log_proto_goTypes = nil
	file_compressed_log_proto_depIdxs = nil
}
